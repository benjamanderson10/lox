let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/Documents/Projects/lox/rlox
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +39 src/main.rs
badd +9 Cargo.toml
badd +2 /init
badd +416 term://~/Documents/Projects/lox/rlox//743:/bin/bash
badd +6 src/error.rs
badd +8 src/scanner.rs
badd +1 token.rs
badd +29 src/token.rs
badd +1 term://~/Documents/Projects/lox/rlox//3228:/bin/bash
badd +0 term://~/Documents/Projects/lox/rlox//3371:/bin/bash
argglobal
%argdel
$argadd src/main.rs
edit src/main.rs
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
3wincmd k
wincmd w
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 33 + 34) / 68)
exe 'vert 1resize ' . ((&columns * 107 + 119) / 238)
exe '2resize ' . ((&lines * 32 + 34) / 68)
exe 'vert 2resize ' . ((&columns * 107 + 119) / 238)
exe '3resize ' . ((&lines * 21 + 34) / 68)
exe 'vert 3resize ' . ((&columns * 130 + 119) / 238)
exe '4resize ' . ((&lines * 1 + 34) / 68)
exe 'vert 4resize ' . ((&columns * 130 + 119) / 238)
exe '5resize ' . ((&lines * 29 + 34) / 68)
exe 'vert 5resize ' . ((&columns * 130 + 119) / 238)
exe '6resize ' . ((&lines * 12 + 34) / 68)
exe 'vert 6resize ' . ((&columns * 130 + 119) / 238)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 39 - ((17 * winheight(0) + 16) / 33)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 39
normal! 014|
wincmd w
argglobal
if bufexists(fnamemodify("term://~/Documents/Projects/lox/rlox//3371:/bin/bash", ":p")) | buffer term://~/Documents/Projects/lox/rlox//3371:/bin/bash | else | edit term://~/Documents/Projects/lox/rlox//3371:/bin/bash | endif
if &buftype ==# 'terminal'
  silent file term://~/Documents/Projects/lox/rlox//3371:/bin/bash
endif
balt src/main.rs
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1886 - ((31 * winheight(0) + 16) / 32)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1886
normal! 049|
wincmd w
argglobal
if bufexists(fnamemodify("src/token.rs", ":p")) | buffer src/token.rs | else | edit src/token.rs | endif
if &buftype ==# 'terminal'
  silent file src/token.rs
endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 29 - ((17 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 29
normal! 08|
wincmd w
argglobal
if bufexists(fnamemodify("Cargo.toml", ":p")) | buffer Cargo.toml | else | edit Cargo.toml | endif
if &buftype ==# 'terminal'
  silent file Cargo.toml
endif
balt term://~/Documents/Projects/lox/rlox//743:/bin/bash
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 8 - ((0 * winheight(0) + 0) / 1)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 8
normal! 012|
wincmd w
argglobal
if bufexists(fnamemodify("src/scanner.rs", ":p")) | buffer src/scanner.rs | else | edit src/scanner.rs | endif
if &buftype ==# 'terminal'
  silent file src/scanner.rs
endif
balt src/error.rs
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 11 - ((7 * winheight(0) + 14) / 29)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 11
normal! 08|
wincmd w
argglobal
if bufexists(fnamemodify("src/error.rs", ":p")) | buffer src/error.rs | else | edit src/error.rs | endif
if &buftype ==# 'terminal'
  silent file src/error.rs
endif
balt src/scanner.rs
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 6 - ((2 * winheight(0) + 6) / 12)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 6
normal! 08|
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 33 + 34) / 68)
exe 'vert 1resize ' . ((&columns * 107 + 119) / 238)
exe '2resize ' . ((&lines * 32 + 34) / 68)
exe 'vert 2resize ' . ((&columns * 107 + 119) / 238)
exe '3resize ' . ((&lines * 21 + 34) / 68)
exe 'vert 3resize ' . ((&columns * 130 + 119) / 238)
exe '4resize ' . ((&lines * 1 + 34) / 68)
exe 'vert 4resize ' . ((&columns * 130 + 119) / 238)
exe '5resize ' . ((&lines * 29 + 34) / 68)
exe 'vert 5resize ' . ((&columns * 130 + 119) / 238)
exe '6resize ' . ((&lines * 12 + 34) / 68)
exe 'vert 6resize ' . ((&columns * 130 + 119) / 238)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
